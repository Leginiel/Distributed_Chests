# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  name: 'ubuntu-latest'

variables:
  Version.MajorMinor: 0.1
  Version.Patch: $[counter(variables['Version.MajorMinor'], 0)]
  system.debug: true

name: $(Version.MajorMinor).$(Version.Patch)

steps:
- task: PowerShell@2
  displayName: 'PowerShell Script'
  inputs:
    targetType: filePath
    filePath: ./ApplyVersionNumber.ps1
    
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
      **
      !.git\**
      !*.ps1
      !*.yml
    TargetFolder: '$(Build.ArtifactStagingDirectory)\Distributed-Chests'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
      changelog.txt
    TargetFolder: '$(Build.ArtifactStagingDirectory)\'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/Distributed-Chests'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Distributed-Chests_$(Version.MajorMinor).$(Version.Patch).zip'
    replaceExistingArchive: true

- task: GitHubRelease@0
  inputs:
    gitHubConnection: 'github.com_Leginiel'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'manual'
    tag: 'v$(Version.MajorMinor).$(Version.Patch)'
    title: 'Distributed Chests $(Version.MajorMinor).$(Version.Patch)'
    releaseNotesFile: '$(Build.ArtifactStagingDirectory)/changelog.txt'
    assets: '$(Build.ArtifactStagingDirectory)/Distributed-Chests_$(Version.MajorMinor).$(Version.Patch).zip'
    isDraft: true
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'